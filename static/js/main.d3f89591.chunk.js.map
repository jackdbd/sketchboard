{"version":3,"sources":["components/Board/styles.module.css","components/ErrorBoundary/styles.module.css","hooks/index.ts","components/Board/utils.ts","components/ShapeSelect/observables.ts","components/Board/observables.ts","components/ShapeStyleConfig/observables.ts","components/Board/renderers/index.ts","components/ShapeSelect/ShapeSelect.tsx","components/Board/Board.tsx","components/ShapeStyleConfig/types.ts","components/ErrorBoundary/FallbackUI.tsx","components/ErrorBoundary/ErrorBoundary.tsx","components/Main/Main.tsx","components/Exports/Exports.tsx","components/InteractionsLogger/InteractionsLogger.tsx","components/ShapeStyleConfig/ShapeStyleConfig.tsx","components/Sidebar/Sidebar.tsx","components/SidebarLayout/SidebarLayout.tsx","index.tsx","components/App/App.tsx"],"names":["module","exports","useSharedState","subject","useState","getValue","state","setState","useEffect","subscription","pipe","skip","subscribe","unsubscribe","next","makeCircleFromPairClicks","pair","ev0","ev1","cx","clientX","cy","clientY","r","p","q","x0","y0","x1","y1","Math","sqrt","pow","euclideanDistance","makeTriangleFromTriplet","triplet","ev2","p0","x","y","p1","p2","ShapeOption","makeTripletOfClicks","events","makeObservableOfClickEventsOnDiv","div","eventTarget","fromEvent","boardSubject$","BehaviorSubject","circlesDrawn","clickCount","coordinates","lastClick","trianglesDrawn","initialState","fill","opacity","stroke","undefined","shapeStyleConfigSubject$","setStyleAttributes","el","config","initialShapeStyleConfigState","setAttribute","renderCircleInSVG","svg","circle","appendChild","c","document","createElementNS","makeSVGCircle","renderTriangleInSVG","triangle","polygon","makeSVGTriangle","dropdownChangesCount","shape","Circle","shapePickerSubject$","ShapeSelect","setSharedState","className","clsx","htmlFor","id","data-testid","name","onChange","event","target","value","Triangle","Rectangle","BezierCurve","DashArray","Board","shapeStyleConfig","refDiv","useRef","refSvg","current","Error","observable$","pairwise","map","makeObservableOfTriangles","msg","styles","board","onClick","domRect","getBoundingClientRect","left","top","coordinatesFromEvent","console","log","ref","height","preserveAspectRatio","width","FallbackUI","props","error","errorInfo","eventId","onReportCrashButtonClick","toString","componentStack","ErrorBoundary","onReportCrash","Sentry","scope","setExtras","this","children","debug","Fragment","React","Component","Main","saveAsPNG","querySelector","saveSvgAsPng","scale","saveAsSVG","serializer","XMLSerializer","svgBlob","Blob","serializeToString","type","saveAs","Exports","style","display","flexDirection","fontSize","InteractionsLogger","ShapeStyleConfig","placeholder","options","nativeEvent","srcElement","selectedIndex","One","Two","Three","maxWidth","Sidebar","SidebarLayout","noStretch","side","length","flexGrow","dsn","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.d3f89591.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"board\":\"styles-module__board--1-URo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fallback-ui\":\"styles-module__fallback-ui--jafEg\"};","import { useEffect, useState } from 'react';\nimport { BehaviorSubject } from 'rxjs';\nimport { skip } from 'rxjs/operators';\n\nexport const useSharedState = <T>(\n  subject: BehaviorSubject<T>\n): [T, typeof useState] => {\n  const [state, setState] = useState(subject.getValue());\n\n  useEffect(() => {\n    const observer = (state: T): void => setState(state);\n    /*\n      The first event is skipped because a BehaviorSubject always notifies its\n      subscribers (i.e observers) of its initial state.\n    */\n    const subscription = subject.pipe(skip(1)).subscribe(observer);\n    return (): void => subscription.unsubscribe();\n  });\n\n  const newSetState = (state: T): void => subject.next(state);\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n  // @ts-ignore\n  return [state, newSetState];\n};\n","import { Circle, Triangle } from './shapes';\nimport { Coords, PairClicks, TripletClicks } from './types';\n\nexport const euclideanDistance = (p: Coords, q: Coords): number => {\n  const [x0, y0] = p;\n  const [x1, y1] = q;\n  return Math.sqrt(Math.pow(x1 - x0, 2) + Math.pow(y1 - y0, 2));\n};\n\nexport const makeCircleFromPairClicks = (pair: PairClicks): Circle => {\n  const [ev0, ev1] = pair;\n  const cx = ev0.clientX;\n  const cy = ev0.clientY;\n  const r = euclideanDistance([cx, cy], [ev1.clientX, ev1.clientY]);\n  return { cx, cy, r };\n};\n\nexport const makeTriangleFromTriplet = (triplet: TripletClicks): Triangle => {\n  const [ev0, ev1, ev2] = triplet;\n  const p0 = { x: ev0.clientX, y: ev0.clientY };\n  const p1 = { x: ev1.clientX, y: ev1.clientY };\n  const p2 = { x: ev2.clientX, y: ev2.clientY };\n  return { p0, p1, p2 };\n};\n\nexport function coordinatesFromEvent(\n  event: React.MouseEvent<HTMLElement, MouseEvent> | MouseEvent\n): Coords {\n  const domRect = (event.target as HTMLDivElement).getBoundingClientRect();\n  const { clientX, clientY } = event;\n  const x = clientX - domRect.left;\n  const y = clientY - domRect.top;\n  return [x, y];\n}\n\nexport const makeTripletOfClicks = (\n  events: [PairClicks, PairClicks]\n): TripletClicks => {\n  const ev0 = events[0][0];\n  const ev1 = events[0][1];\n  const ev2 = events[1][1];\n  const triplet = [ev0, ev1, ev2] as TripletClicks;\n  return triplet;\n};\n","import { BehaviorSubject } from 'rxjs';\n\nexport enum ShapeOption {\n  BezierCurve = 'Bezier Curve',\n  Circle = 'Circle',\n  Rectangle = 'Rectangle',\n  Triangle = 'Triangle',\n}\n\ninterface State {\n  dropdownChangesCount: number;\n  shape: ShapeOption;\n}\n\nexport const initialState: State = {\n  dropdownChangesCount: 0,\n  shape: ShapeOption.Circle,\n};\n\n/**\n * BehaviorSubject that represents this component's state over time.\n *\n * @see http://reactivex.io/rxjs/manual/overview.html#behaviorsubject\n */\nexport const shapePickerSubject$ = new BehaviorSubject<State>(initialState);\n","import { BehaviorSubject, fromEvent, Observable } from 'rxjs';\nimport { map, pairwise } from 'rxjs/operators';\nimport { FromEventTarget } from 'rxjs/internal/observable/fromEvent';\n\nimport { Coords } from './types';\nimport {\n  makeCircleFromPairClicks,\n  makeTriangleFromTriplet,\n  makeTripletOfClicks,\n} from './utils';\nimport { Circle, Triangle } from './shapes';\n\nconst makeObservableOfClickEventsOnTarget = (\n  eventTarget: FromEventTarget<MouseEvent>\n): Observable<MouseEvent> => {\n  return fromEvent(eventTarget, 'click');\n};\n\nexport const makeObservableOfClickEventsOnDiv = (\n  div: HTMLDivElement\n): Observable<MouseEvent> => makeObservableOfClickEventsOnTarget(div);\n\nexport const makeObservableOfCircles = (\n  div: HTMLDivElement\n): Observable<Circle> => {\n  return makeObservableOfClickEventsOnDiv(div).pipe(\n    pairwise(),\n    map(makeCircleFromPairClicks)\n  );\n};\n\nexport const makeObservableOfTriangles = (\n  div: HTMLDivElement\n): Observable<Triangle> => {\n  return makeObservableOfClickEventsOnDiv(div).pipe(\n    pairwise(),\n    pairwise(),\n    map(makeTripletOfClicks),\n    map(makeTriangleFromTriplet)\n  );\n};\n\ninterface State {\n  circlesDrawn: number;\n  clickCount: number;\n  coordinates: Coords[];\n  lastClick: Coords;\n  trianglesDrawn: number;\n}\n\nconst initialState: State = {\n  circlesDrawn: 0,\n  clickCount: 0,\n  coordinates: [] as Coords[],\n  lastClick: [0, 0] as Coords,\n  trianglesDrawn: 0,\n};\n\n/**\n * BehaviorSubject that represents this component's state over time.\n *\n * @see http://reactivex.io/rxjs/manual/overview.html#behaviorsubject\n */\nexport const boardSubject$ = new BehaviorSubject<State>(initialState);\n","import { BehaviorSubject } from 'rxjs';\n\nimport { ShapeStyleConfigState as State } from './types';\n\nexport const initialState: State = {\n  fill: '#FF5722',\n  opacity: '1',\n  stroke: '#6A1B9A',\n  'stroke-dasharray': undefined,\n  'stroke-opacity': undefined,\n  'stroke-width': '10px',\n};\n\nexport const shapeStyleConfigSubject$ = new BehaviorSubject<State>(\n  initialState\n);\n","import { Circle, Triangle } from '../shapes';\nimport { ShapeStyleConfigState } from '../../ShapeStyleConfig/types';\nimport { initialState as initialShapeStyleConfigState } from '../../ShapeStyleConfig/observables';\n\nconst NAMESPACE_URI = 'http://www.w3.org/2000/svg';\n\nconst setStyleAttributes = <T extends SVGElement>(\n  el: T,\n  config: ShapeStyleConfigState = initialShapeStyleConfigState\n): T => {\n  el.setAttribute('fill', config.fill || '');\n  el.setAttribute('opacity', config.opacity || '');\n  el.setAttribute('stroke', config.stroke || '');\n  el.setAttribute('stroke-dasharray', config['stroke-dasharray'] || '');\n  el.setAttribute('stroke-opacity', config['stroke-opacity'] || '');\n  el.setAttribute('stroke-width', config['stroke-width'] || '');\n  return el;\n};\n\nconst makeSVGCircle = (\n  c: Circle,\n  config?: ShapeStyleConfigState\n): SVGCircleElement => {\n  let circle = document.createElementNS(NAMESPACE_URI, 'circle');\n  circle.setAttribute('cx', `${c.cx}`);\n  circle.setAttribute('cy', `${c.cy}`);\n  circle.setAttribute('r', `${c.r}`);\n  circle = setStyleAttributes(circle, config);\n  return circle;\n};\n\nexport const renderCircleInSVG = (\n  svg: SVGSVGElement,\n  circle: Circle,\n  config?: ShapeStyleConfigState\n): void => {\n  svg.appendChild(makeSVGCircle(circle, config));\n};\n\nconst makeSVGTriangle = (\n  triangle: Triangle,\n  config?: ShapeStyleConfigState\n): SVGPolygonElement => {\n  const { p0, p1, p2 } = triangle;\n  let polygon = document.createElementNS(NAMESPACE_URI, 'polygon');\n  polygon.setAttribute(\n    'points',\n    `${p0.x},${p0.y} ${p1.x},${p1.y} ${p2.x},${p2.y}`\n  );\n  polygon = setStyleAttributes(polygon, config);\n  return polygon;\n};\n\nexport const renderTriangleInSVG = (\n  svg: SVGSVGElement,\n  triangle: Triangle,\n  config?: ShapeStyleConfigState\n): void => {\n  svg.appendChild(makeSVGTriangle(triangle, config));\n};\n","import clsx from 'clsx';\nimport React from 'react';\n\nimport { useSharedState } from '../../hooks';\nimport { ShapeOption, shapePickerSubject$ } from './observables';\n\nexport const SHAPE_SELECT_TEST_ID = 'sidebar-select-test-id';\nconst SHAPE_SELECT_ID = 'shape-select-id';\nconst SHAPE_SELECT_NAME = 'shape-selector';\n\nexport const ShapeSelect: React.FC<{}> = () => {\n  const [state, setSharedState] = useSharedState(shapePickerSubject$);\n\n  const onShapeChange = (event: React.ChangeEvent<HTMLSelectElement>): void => {\n    setSharedState({\n      dropdownChangesCount: state.dropdownChangesCount + 1,\n      shape: event.target.value as ShapeOption,\n    });\n  };\n\n  return (\n    <div className={clsx('font-size:biggish')}>\n      <label htmlFor={SHAPE_SELECT_ID}>{SHAPE_SELECT_NAME}</label>\n      <div className=\"box\">\n        <select\n          id={SHAPE_SELECT_ID}\n          data-testid={SHAPE_SELECT_TEST_ID}\n          name={SHAPE_SELECT_NAME}\n          onChange={onShapeChange}\n        >\n          <option value={ShapeOption.Circle}>Circle</option>\n          <option value={ShapeOption.Triangle}>Triangle</option>\n          <option value={ShapeOption.Rectangle}>Rectangle</option>\n          <option value={ShapeOption.BezierCurve}>Bezier Curve</option>\n        </select>\n      </div>\n    </div>\n  );\n};\n","import React, { useEffect, useRef } from 'react';\n\nimport { useSharedState } from '../../hooks';\nimport {\n  boardSubject$,\n  makeObservableOfCircles,\n  makeObservableOfTriangles,\n} from './observables';\nimport { renderCircleInSVG, renderTriangleInSVG } from './renderers';\nimport { Circle, Triangle } from './shapes';\nimport { coordinatesFromEvent } from './utils';\nimport { shapePickerSubject$, ShapeOption } from '../ShapeSelect';\n\nimport styles from './styles.module.css';\nimport { Subscription } from 'rxjs';\nimport { shapeStyleConfigSubject$ } from '../ShapeStyleConfig/observables';\n\nexport const DIV_CONTAINER_TEST_ID = 'board-container-test-id';\nexport const SVG_BOARD_TEST_ID = 'board-svg-test-id';\n\nconst REF_NOT_READY = 'ASSERT: ref NOT ready!';\n\nexport const Board: React.FC<{}> = () => {\n  const [state, setSharedState] = useSharedState(boardSubject$);\n  const [{ shape }] = useSharedState(shapePickerSubject$);\n  const [shapeStyleConfig] = useSharedState(shapeStyleConfigSubject$);\n\n  const refDiv = useRef<HTMLDivElement>(null);\n  const refSvg = useRef<SVGSVGElement>(null);\n\n  useEffect(() => {\n    if (!refDiv.current) {\n      throw new Error(REF_NOT_READY);\n    }\n\n    if (!refSvg.current) {\n      throw new Error(REF_NOT_READY);\n    }\n\n    let subscription: Subscription;\n    switch (shape) {\n      case ShapeOption.Circle: {\n        const observable$ = makeObservableOfCircles(refDiv.current);\n        const observer = (circle: Circle): void => {\n          if (refSvg.current) {\n            renderCircleInSVG(refSvg.current, circle, shapeStyleConfig);\n          }\n          setSharedState({\n            ...state,\n            circlesDrawn: state.circlesDrawn + 1,\n            clickCount: state.clickCount + 2,\n          });\n        };\n\n        subscription = observable$.subscribe(observer);\n        break;\n      }\n\n      case ShapeOption.Triangle: {\n        const observable$ = makeObservableOfTriangles(refDiv.current);\n        const observer = (triangle: Triangle): void => {\n          if (refSvg.current) {\n            renderTriangleInSVG(refSvg.current, triangle, shapeStyleConfig);\n          }\n          setSharedState({\n            ...state,\n            clickCount: state.clickCount + 3,\n            trianglesDrawn: state.trianglesDrawn + 1,\n          });\n        };\n\n        subscription = observable$.subscribe(observer);\n        break;\n      }\n\n      default:\n        const msg = `TODO: ${shape} not yet implemented`;\n        throw new Error(msg);\n    }\n\n    return (): void => {\n      if (subscription) {\n        subscription.unsubscribe();\n      }\n    };\n  }, [setSharedState, shape, shapeStyleConfig, state]);\n\n  const onClick = (\n    event: React.MouseEvent<HTMLDivElement, MouseEvent>\n  ): void => {\n    const [x, y] = coordinatesFromEvent(event);\n    console.log('onClick', x, y);\n  };\n\n  return (\n    <div\n      className={styles.board}\n      data-testid={DIV_CONTAINER_TEST_ID}\n      onClick={onClick}\n      ref={refDiv}\n    >\n      <svg\n        data-testid={SVG_BOARD_TEST_ID}\n        height=\"100%\"\n        preserveAspectRatio={'xMinYMin meet'}\n        ref={refSvg}\n        width=\"100%\"\n      />\n    </div>\n  );\n};\n","export enum DashArray {\n  One = '5,5',\n  Two = '10,10',\n  Three = '20,10,5,5,5,10',\n}\n\nexport interface ShapeStyleConfigState {\n  fill?: string;\n  opacity?: string;\n  stroke?: string;\n  'stroke-opacity'?: string;\n  'stroke-dasharray'?: DashArray;\n  'stroke-width'?: string;\n}\n","import React from 'react';\n\nimport styles from './styles.module.css';\n\nexport const DIV_CONTAINER_TEST_ID = 'fallback-ui-div-container-test-id';\n\ninterface Props {\n  error: Error;\n  errorInfo?: React.ErrorInfo;\n  eventId?: string;\n  onReportCrashButtonClick: () => void;\n}\n\nexport const FallbackUI: React.FC<Props> = props => {\n  const { error, errorInfo, eventId, onReportCrashButtonClick } = props;\n\n  return (\n    <div className={styles['fallback-ui']} data-testid={DIV_CONTAINER_TEST_ID}>\n      <h1>Something went wrong.</h1>\n      <details>\n        {error.toString()}\n        <br />\n        {errorInfo && errorInfo.componentStack}\n      </details>\n      {eventId && (\n        <button onClick={onReportCrashButtonClick}>Report feedback</button>\n      )}\n    </div>\n  );\n};\n","import * as Sentry from '@sentry/browser';\nimport React, { ErrorInfo } from 'react';\n\nimport { FallbackUI } from './FallbackUI';\n\ninterface Props {\n  debug?: boolean;\n}\n\ninterface State {\n  error?: Error;\n  errorInfo?: ErrorInfo;\n  eventId?: string;\n}\n\nexport class ErrorBoundary extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = { error: undefined, errorInfo: undefined, eventId: undefined };\n  }\n\n  public componentDidCatch(error: Error, errorInfo: ErrorInfo): void {\n    Sentry.withScope(scope => {\n      scope.setExtras(errorInfo);\n      const eventId = Sentry.captureException(error);\n      this.setState({ error, errorInfo, eventId });\n    });\n  }\n\n  public render(): JSX.Element {\n    const { children, debug } = this.props;\n    const { error, errorInfo, eventId } = this.state;\n\n    if (error && debug) {\n      console.error('--- ERROR ---', error);\n    }\n\n    return error ? (\n      <FallbackUI\n        error={error}\n        errorInfo={errorInfo}\n        eventId={eventId}\n        onReportCrashButtonClick={this.onReportCrash}\n      />\n    ) : (\n      <React.Fragment>{children}</React.Fragment>\n    );\n  }\n\n  private onReportCrash = (): void => {\n    Sentry.showReportDialog({ eventId: this.state.eventId });\n  };\n}\n","import React from 'react';\n\n// import { useSharedState } from '../../hooks';\nimport { Board } from '../Board';\n// import { Board, boardSubject$ } from '../Board';\nimport { ErrorBoundary } from '../ErrorBoundary';\n// import { EventsList } from '../EventsList';\n\n// import styles from './styles.module.css';\n\nexport const Main: React.FC<{}> = () => {\n  //   const [{ coordinates }] = useSharedState(boardSubject$);\n  return (\n    <ErrorBoundary debug={true}>\n      <Board />\n    </ErrorBoundary>\n  );\n  //   return (\n  //     <div className={styles.main}>\n  //       <ErrorBoundary debug={true}>\n  //         <Board />\n  //       </ErrorBoundary>\n  //       <EventsList coordinates={coordinates} />\n  //     </div>\n  //   );\n};\n","import clsx from 'clsx';\nimport { saveAs } from 'file-saver';\nimport React from 'react';\nimport { saveSvgAsPng } from 'save-svg-as-png';\n\nconst saveAsPNG = (): void => {\n  const svg = document.querySelector('svg');\n  if (svg) {\n    saveSvgAsPng(svg, 'drawing.png', {\n      scale: 0.5,\n    });\n  }\n};\n\nconst saveAsSVG = (): void => {\n  const svg = document.querySelector('svg');\n  if (svg) {\n    const serializer = new XMLSerializer();\n    const svgBlob = new Blob([serializer.serializeToString(svg)], {\n      type: 'image/svg+xml',\n    });\n    saveAs(svgBlob, 'disegno.svg');\n  }\n};\n\nexport const Exports: React.FC<{}> = () => {\n  return (\n    <div className={clsx('font-size:biggish')}>\n      <label>Exports</label>\n      <div\n        className={clsx('box', 'stack')}\n        style={{ display: 'flex', flexDirection: 'column' }}\n      >\n        <button onClick={saveAsSVG} style={{ fontSize: '1em' }} type=\"button\">\n          Save as SVG\n        </button>\n        <button onClick={saveAsPNG} style={{ fontSize: '1em' }} type=\"button\">\n          Save as PNG\n        </button>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\n\nimport { useSharedState } from '../../hooks';\nimport { boardSubject$ } from '../Board';\nimport { shapePickerSubject$ } from '../ShapeSelect';\n\nexport const InteractionsLogger: React.FC<{}> = () => {\n  const [{ circlesDrawn, clickCount, trianglesDrawn }] = useSharedState(\n    boardSubject$\n  );\n  const [{ shape }] = useSharedState(shapePickerSubject$);\n\n  return (\n    <div className=\"stack\">\n      <p>{`Selected shape: ${shape}`}</p>\n      <p>{`Click count: ${clickCount}`}</p>\n      <p>{`Circles drawn: ${circlesDrawn}`}</p>\n      <p>{`Triangles drawn: ${trianglesDrawn}`}</p>\n    </div>\n  );\n};\n","import clsx from 'clsx';\nimport React from 'react';\n\nimport { useSharedState } from '../../hooks';\nimport { shapePickerSubject$ } from '../ShapeSelect';\nimport { shapeStyleConfigSubject$ } from './observables';\nimport { DashArray } from './types';\n\nexport const ShapeStyleConfig: React.FC<{}> = () => {\n  const [{ shape }] = useSharedState(shapePickerSubject$);\n  const [state, setSharedState] = useSharedState(shapeStyleConfigSubject$);\n\n  const onFillChange: React.ChangeEventHandler<HTMLInputElement> = event => {\n    setSharedState({\n      ...state,\n      fill: event.target.value,\n    });\n  };\n\n  const onOpacityChange: React.ChangeEventHandler<HTMLInputElement> = event => {\n    setSharedState({\n      ...state,\n      opacity: event.target.value,\n    });\n  };\n\n  const onStrokeChange: React.ChangeEventHandler<HTMLInputElement> = event => {\n    setSharedState({\n      ...state,\n      stroke: event.target.value,\n    });\n  };\n\n  const onStrokeDashArrayChange: React.ChangeEventHandler<\n    HTMLSelectElement\n  > = event => {\n    const options = (event.nativeEvent.srcElement as HTMLSelectElement).options;\n    setSharedState({\n      ...state,\n      'stroke-dasharray': options[options.selectedIndex].value,\n    });\n  };\n\n  const onStrokeOpacityChange: React.ChangeEventHandler<\n    HTMLInputElement\n  > = event => {\n    setSharedState({\n      ...state,\n      'stroke-opacity': event.target.value,\n    });\n  };\n\n  const onStrokeWidthChange: React.ChangeEventHandler<\n    HTMLInputElement\n  > = event => {\n    setSharedState({\n      ...state,\n      'stroke-width': event.target.value,\n    });\n  };\n\n  return (\n    <div className={'font-size:biggish'}>\n      <label>{`Config style for ${shape}`}</label>\n      <div className={clsx('box')}>\n        <div>\n          <label htmlFor=\"fill\">fill</label>\n          <input\n            name=\"fill\"\n            onChange={onFillChange}\n            placeholder=\"e.g. #ff0000, red\"\n            type=\"text\"\n            value={state.fill}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"opacity\">opacity</label>\n          <input\n            name=\"opacity\"\n            onChange={onOpacityChange}\n            placeholder=\"e.g. 0.5\"\n            type=\"text\"\n            value={state['opacity']}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"stroke\">stroke</label>\n          <input\n            name=\"stroke\"\n            onChange={onStrokeChange}\n            placeholder=\"e.g. #ff0000, red\"\n            type=\"text\"\n            value={state.stroke}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"stroke-dasharray\">stroke-dasharray</label>\n          <select name=\"stroke-dasharray\" onChange={onStrokeDashArrayChange}>\n            <option value={DashArray.One}>One</option>\n            <option value={DashArray.Two}>Two</option>\n            <option value={DashArray.Three}>Three</option>\n          </select>\n        </div>\n        <div>\n          <label htmlFor=\"stroke-opacity\">stroke-opacity</label>\n          <input\n            name=\"stroke-opacity\"\n            onChange={onStrokeOpacityChange}\n            placeholder=\"e.g. 0.5\"\n            style={{ maxWidth: '5rem' }}\n            type=\"text\"\n            value={state['stroke-opacity']}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"stroke-width\">stroke-width</label>\n          <input\n            name=\"stroke-width\"\n            onChange={onStrokeWidthChange}\n            placeholder=\"e.g. 20px\"\n            type=\"text\"\n            value={state['stroke-width']}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import clsx from 'clsx';\nimport React from 'react';\n\nimport { Exports } from '../Exports';\nimport { InteractionsLogger } from '../InteractionsLogger';\nimport { ShapeSelect } from '../ShapeSelect';\nimport { ShapeStyleConfig } from '../ShapeStyleConfig';\n\nexport const DIV_CONTAINER_TEST_ID = 'sidebar-container-test-id';\n\nexport const Sidebar: React.FC<{}> = () => {\n  return (\n    <div className={clsx('stack')} data-testid={DIV_CONTAINER_TEST_ID}>\n      <ShapeSelect />\n      <ShapeStyleConfig />\n      <Exports />\n      <InteractionsLogger />\n    </div>\n  );\n};\n","import clsx from 'clsx';\nimport React, { useEffect } from 'react';\n\ninterface Props {\n  /**\n   * The sidebar and the non-sidebar element.\n   */\n  children: React.ReactElement[];\n\n  /**\n   * Make the adjacent elements adopt their natural height.\n   */\n  noStretch?: boolean;\n\n  /**\n   * The side where the sidebar is on.\n   */\n  side: 'left' | 'right';\n}\n\nexport const SidebarLayout: React.FC<Props> = props => {\n  const { children, noStretch, side } = props;\n\n  useEffect(() => {\n    if (children.length !== 2) {\n      throw new Error('The Sidebar layout must have exactly 2 children');\n    }\n  }, [children, side]);\n\n  return (\n    <div\n      className={clsx(`with-sidebar-on-the-${side}`)}\n      style={{ height: '100%', flexGrow: 1 }}\n    >\n      <div\n        className={clsx(\n          noStretch ? 'not-stretched-wrapper' : 'stretched-wrapper'\n        )}\n      >\n        {children}\n      </div>\n    </div>\n  );\n};\n","import * as Sentry from '@sentry/browser';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { App } from './components/App';\n\nimport './css/index.css';\n\n/**\n * We could use the CDN hosted version of the Sentry JavaScript browser SDK, but\n * Ad blockers would probably block Sentry from submitting crash reports.\n * Instead, we add Sentry as a dependency (unfortunately, this means that it\n * will end up in the final bundle).\n */\nSentry.init({\n  dsn: 'https://94f09b0a51c74127b82e3fa4d47857c2@sentry.io/1547393',\n});\n\nReactDOM.render(<App />, document.getElementById('root'));\n","import React from 'react';\n\nimport { Main } from '../Main';\nimport { Sidebar } from '../Sidebar';\nimport { SidebarLayout } from '../SidebarLayout';\n\nexport const App: React.FC<{}> = () => {\n  return (\n    <SidebarLayout side={'right'}>\n      <Main />\n      <Sidebar />\n    </SidebarLayout>\n  );\n};\n"],"sourceRoot":""}