{"version":3,"sources":["components/Board/styles.module.css","components/ErrorBoundary/styles.module.css","hooks/index.ts","components/Board/utils.ts","components/ShapeSelect/observables.ts","components/Board/observables.ts","components/ShapeStyleConfig/observables.ts","components/Board/renderers/index.ts","components/ShapeSelect/ShapeSelect.tsx","components/Board/Board.tsx","components/ShapeStyleConfig/types.ts","components/ErrorBoundary/FallbackUI.tsx","components/ErrorBoundary/ErrorBoundary.tsx","components/Main/Main.tsx","components/Exports/Exports.tsx","components/InteractionsLogger/InteractionsLogger.tsx","components/ShapeStyleConfig/ShapeStyleConfig.tsx","components/Sidebar/Sidebar.tsx","components/SidebarLayout/SidebarLayout.tsx","index.tsx","components/App/App.tsx"],"names":["module","exports","useSharedState","subject","useState","getValue","state","setState","useEffect","subscription","pipe","skip","subscribe","unsubscribe","next","euclideanDistance","p","q","x0","y0","x1","y1","Math","sqrt","pow","makeCircleFromPairClicks","pair","ev0","ev1","cx","clientX","cy","clientY","r","makeTriangleFromTriplet","triplet","ev2","p0","x","y","p1","p2","coordinatesFromEvent","event","domRect","target","getBoundingClientRect","left","top","ShapeOption","makeTripletOfClicks","events","makeObservableOfMouseMoveEventsOnDiv","div","eventTarget","fromEvent","makeObservableOfClickEventsOnDiv","boardSubject$","BehaviorSubject","circlesDrawn","clickCount","coordinates","lastClick","trianglesDrawn","initialState","fill","opacity","stroke","undefined","shapeStyleConfigSubject$","setStyleAttributes","el","config","initialShapeStyleConfigState","setAttribute","renderCircleInSVG","svg","circle","id","appendChild","c","document","createElementNS","makeSVGCircle","renderCircleFeedbackInSVG","querySelector","updateCircleInSVG","renderTriangleInSVG","triangle","polygon","makeSVGTriangle","dropdownChangesCount","shape","Circle","shapePickerSubject$","ShapeSelect","setSharedState","className","clsx","htmlFor","data-testid","name","onChange","value","Triangle","Rectangle","BezierCurve","DashArray","Board","shapeStyleConfig","refDiv","useRef","refSvg","circleCenter","current","Error","subFeedback","sub","obsFeedback$","observable$","pairwise","map","removeChild","cleanupCircleFeedbackInSVG","feedbackCircle","makeObservableOfTriangles","msg","styles","board","ref","height","preserveAspectRatio","width","FallbackUI","props","error","errorInfo","eventId","onReportCrashButtonClick","toString","componentStack","onClick","ErrorBoundary","onReportCrash","Sentry","scope","setExtras","this","children","debug","console","Fragment","React","Component","Main","saveAsPNG","saveSvgAsPng","scale","saveAsSVG","serializer","XMLSerializer","svgBlob","Blob","serializeToString","type","saveAs","Exports","style","display","flexDirection","fontSize","InteractionsLogger","ShapeStyleConfig","max","min","step","options","nativeEvent","srcElement","selectedIndex","label","Three","Four","FiveTen","Odd","Even","Other","placeholder","Sidebar","SidebarLayout","noStretch","side","length","flexGrow","dsn","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.419b29e9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"board\":\"styles-module__board--1-URo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fallback-ui\":\"styles-module__fallback-ui--jafEg\"};","import { useEffect, useState } from 'react';\nimport { BehaviorSubject } from 'rxjs';\nimport { skip } from 'rxjs/operators';\n\nexport const useSharedState = <T>(\n  subject: BehaviorSubject<T>\n): [T, typeof useState] => {\n  const [state, setState] = useState(subject.getValue());\n\n  useEffect(() => {\n    const observer = (state: T): void => setState(state);\n    /*\n      The first event is skipped because a BehaviorSubject always notifies its\n      subscribers (i.e observers) of its initial state.\n    */\n    const subscription = subject.pipe(skip(1)).subscribe(observer);\n    return (): void => subscription.unsubscribe();\n  });\n\n  const newSetState = (state: T): void => subject.next(state);\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n  // @ts-ignore\n  return [state, newSetState];\n};\n","import { Circle, Triangle } from './shapes';\nimport { Coords, PairClicks, TripletClicks } from './types';\n\nexport const euclideanDistance = (p: Coords, q: Coords): number => {\n  const [x0, y0] = p;\n  const [x1, y1] = q;\n  return Math.sqrt(Math.pow(x1 - x0, 2) + Math.pow(y1 - y0, 2));\n};\n\nexport const makeCircleFromPairClicks = (pair: PairClicks): Circle => {\n  const [ev0, ev1] = pair;\n  const cx = ev0.clientX;\n  const cy = ev0.clientY;\n  const r = euclideanDistance([cx, cy], [ev1.clientX, ev1.clientY]);\n  return { cx, cy, r };\n};\n\nexport const makeTriangleFromTriplet = (triplet: TripletClicks): Triangle => {\n  const [ev0, ev1, ev2] = triplet;\n  const p0 = { x: ev0.clientX, y: ev0.clientY };\n  const p1 = { x: ev1.clientX, y: ev1.clientY };\n  const p2 = { x: ev2.clientX, y: ev2.clientY };\n  return { p0, p1, p2 };\n};\n\nexport function coordinatesFromEvent(\n  event: React.MouseEvent<HTMLElement, MouseEvent> | MouseEvent\n): Coords {\n  const domRect = (event.target as HTMLDivElement).getBoundingClientRect();\n  const { clientX, clientY } = event;\n  const x = clientX - domRect.left;\n  const y = clientY - domRect.top;\n  return [x, y];\n}\n\nexport const makeTripletOfClicks = (\n  events: [PairClicks, PairClicks]\n): TripletClicks => {\n  const ev0 = events[0][0];\n  const ev1 = events[0][1];\n  const ev2 = events[1][1];\n  const triplet = [ev0, ev1, ev2] as TripletClicks;\n  return triplet;\n};\n","import { BehaviorSubject } from 'rxjs';\n\nexport enum ShapeOption {\n  BezierCurve = 'Bezier Curve',\n  Circle = 'Circle',\n  Rectangle = 'Rectangle',\n  Triangle = 'Triangle',\n}\n\ninterface State {\n  dropdownChangesCount: number;\n  shape: ShapeOption;\n}\n\nexport const initialState: State = {\n  dropdownChangesCount: 0,\n  shape: ShapeOption.Circle,\n};\n\n/**\n * BehaviorSubject that represents this component's state over time.\n *\n * @see http://reactivex.io/rxjs/manual/overview.html#behaviorsubject\n */\nexport const shapePickerSubject$ = new BehaviorSubject<State>(initialState);\n","import { BehaviorSubject, fromEvent, Observable } from 'rxjs';\nimport { map, pairwise } from 'rxjs/operators';\nimport { FromEventTarget } from 'rxjs/internal/observable/fromEvent';\n\nimport { Coords } from './types';\nimport {\n  makeCircleFromPairClicks,\n  makeTriangleFromTriplet,\n  makeTripletOfClicks,\n} from './utils';\nimport { Circle, Triangle } from './shapes';\n\nconst makeObservableOfClickEventsOnTarget = (\n  eventTarget: FromEventTarget<MouseEvent>\n): Observable<MouseEvent> => {\n  return fromEvent(eventTarget, 'click');\n};\n\nconst makeObservableOfMouseMoveEventsOnTarget = (\n  eventTarget: FromEventTarget<MouseEvent>\n): Observable<MouseEvent> => {\n  return fromEvent(eventTarget, 'mousemove');\n};\n\nexport const makeObservableOfMouseMoveEventsOnDiv = (\n  div: HTMLDivElement\n): Observable<MouseEvent> => makeObservableOfMouseMoveEventsOnTarget(div);\n\nexport const makeObservableOfClickEventsOnDiv = (\n  div: HTMLDivElement\n): Observable<MouseEvent> => makeObservableOfClickEventsOnTarget(div);\n\nexport const makeObservableOfCircles = (\n  div: HTMLDivElement\n): Observable<Circle> => {\n  return makeObservableOfClickEventsOnDiv(div).pipe(\n    pairwise(),\n    map(makeCircleFromPairClicks)\n  );\n};\n\nexport const makeObservableOfTriangles = (\n  div: HTMLDivElement\n): Observable<Triangle> => {\n  return makeObservableOfClickEventsOnDiv(div).pipe(\n    pairwise(),\n    pairwise(),\n    map(makeTripletOfClicks),\n    map(makeTriangleFromTriplet)\n  );\n};\n\ninterface State {\n  circlesDrawn: number;\n  clickCount: number;\n  coordinates: Coords[];\n  lastClick: Coords;\n  trianglesDrawn: number;\n}\n\nconst initialState: State = {\n  circlesDrawn: 0,\n  clickCount: 0,\n  coordinates: [] as Coords[],\n  lastClick: [0, 0] as Coords,\n  trianglesDrawn: 0,\n};\n\n/**\n * BehaviorSubject that represents this component's state over time.\n *\n * @see http://reactivex.io/rxjs/manual/overview.html#behaviorsubject\n */\nexport const boardSubject$ = new BehaviorSubject<State>(initialState);\n","import { BehaviorSubject } from 'rxjs';\n\nimport { ShapeStyleConfigState as State } from './types';\n\nexport const initialState: State = {\n  fill: '#FF5722',\n  opacity: '1',\n  stroke: '#6A1B9A',\n  'stroke-dasharray': undefined,\n  'stroke-opacity': '1',\n  'stroke-width': '10px',\n};\n\nexport const shapeStyleConfigSubject$ = new BehaviorSubject<State>(\n  initialState\n);\n","import { Circle, Triangle } from '../shapes';\nimport { ShapeStyleConfigState } from '../../ShapeStyleConfig/types';\nimport { initialState as initialShapeStyleConfigState } from '../../ShapeStyleConfig/observables';\n\nconst NAMESPACE_URI = 'http://www.w3.org/2000/svg';\n\nconst CIRCLE_FEEDBACK_ID = 'circle-feedback';\n\nconst setStyleAttributes = <T extends SVGElement>(\n  el: T,\n  config: ShapeStyleConfigState = initialShapeStyleConfigState\n): T => {\n  el.setAttribute('fill', config.fill || '');\n  el.setAttribute('opacity', config.opacity || '');\n  el.setAttribute('stroke', config.stroke || '');\n  el.setAttribute('stroke-dasharray', config['stroke-dasharray'] || '');\n  el.setAttribute('stroke-opacity', config['stroke-opacity'] || '');\n  el.setAttribute('stroke-width', config['stroke-width'] || '');\n  return el;\n};\n\nconst makeSVGCircle = (\n  c: Circle,\n  config?: ShapeStyleConfigState,\n  id?: string\n): SVGCircleElement => {\n  let circle = document.createElementNS(NAMESPACE_URI, 'circle');\n  circle.setAttribute('cx', `${c.cx}`);\n  circle.setAttribute('cy', `${c.cy}`);\n  circle.setAttribute('r', `${c.r}`);\n  circle = setStyleAttributes(circle, config);\n  if (id) {\n    circle.setAttribute('id', id);\n  }\n  return circle;\n};\n\nexport const cleanupCircleFeedbackInSVG = (svg: SVGSVGElement): void => {\n  const el = document.querySelector(`#${CIRCLE_FEEDBACK_ID}`);\n  if (el) {\n    svg.removeChild(el);\n  }\n};\n\nexport const renderCircleInSVG = (\n  svg: SVGSVGElement,\n  circle: Circle,\n  config?: ShapeStyleConfigState,\n  id?: string\n): void => {\n  svg.appendChild(makeSVGCircle(circle, config, id));\n};\n\nconst updateCircleInSVG = (\n  el: SVGCircleElement,\n  c: Circle,\n  config?: ShapeStyleConfigState\n): void => {\n  el.setAttribute('cx', `${c.cx}`);\n  el.setAttribute('cy', `${c.cy}`);\n  el.setAttribute('r', `${c.r}`);\n  el = setStyleAttributes(el, config);\n};\n\n// TODO: render a dashed line connecting the center and the current mousemove event coordinates\nexport const renderCircleFeedbackInSVG = (\n  svg: SVGSVGElement,\n  circle: Circle,\n  config?: ShapeStyleConfigState\n): void => {\n  const el = document.querySelector(`#${CIRCLE_FEEDBACK_ID}`);\n  if (el) {\n    updateCircleInSVG(el as SVGCircleElement, circle, config);\n  } else {\n    renderCircleInSVG(svg, circle, config, CIRCLE_FEEDBACK_ID);\n  }\n};\n\nconst makeSVGTriangle = (\n  triangle: Triangle,\n  config?: ShapeStyleConfigState\n): SVGPolygonElement => {\n  const { p0, p1, p2 } = triangle;\n  let polygon = document.createElementNS(NAMESPACE_URI, 'polygon');\n  polygon.setAttribute(\n    'points',\n    `${p0.x},${p0.y} ${p1.x},${p1.y} ${p2.x},${p2.y}`\n  );\n  polygon = setStyleAttributes(polygon, config);\n  return polygon;\n};\n\nexport const renderTriangleInSVG = (\n  svg: SVGSVGElement,\n  triangle: Triangle,\n  config?: ShapeStyleConfigState\n): void => {\n  svg.appendChild(makeSVGTriangle(triangle, config));\n};\n","import clsx from 'clsx';\nimport React from 'react';\n\nimport { useSharedState } from '../../hooks';\nimport { ShapeOption, shapePickerSubject$ } from './observables';\n\nexport const SHAPE_SELECT_TEST_ID = 'sidebar-select-test-id';\nconst SHAPE_SELECT_ID = 'shape-select-id';\nconst SHAPE_SELECT_NAME = 'shape-selector';\n\nexport const ShapeSelect: React.FC<{}> = () => {\n  const [state, setSharedState] = useSharedState(shapePickerSubject$);\n\n  const onShapeChange = (event: React.ChangeEvent<HTMLSelectElement>): void => {\n    setSharedState({\n      dropdownChangesCount: state.dropdownChangesCount + 1,\n      shape: event.target.value as ShapeOption,\n    });\n  };\n\n  return (\n    <div className={clsx('font-size:biggish')}>\n      <label htmlFor={SHAPE_SELECT_ID}>{SHAPE_SELECT_NAME}</label>\n      <div className=\"box\">\n        <select\n          id={SHAPE_SELECT_ID}\n          data-testid={SHAPE_SELECT_TEST_ID}\n          name={SHAPE_SELECT_NAME}\n          onChange={onShapeChange}\n        >\n          <option value={ShapeOption.Circle}>Circle</option>\n          <option value={ShapeOption.Triangle}>Triangle</option>\n          <option value={ShapeOption.Rectangle}>Rectangle</option>\n          <option value={ShapeOption.BezierCurve}>Bezier Curve</option>\n        </select>\n      </div>\n    </div>\n  );\n};\n","import React, { useEffect, useRef } from 'react';\nimport { Subscription } from 'rxjs';\n\nimport { useSharedState } from '../../hooks';\nimport {\n  boardSubject$,\n  makeObservableOfCircles,\n  makeObservableOfTriangles,\n  makeObservableOfMouseMoveEventsOnDiv,\n  makeObservableOfClickEventsOnDiv,\n} from './observables';\nimport {\n  renderCircleInSVG,\n  renderCircleFeedbackInSVG,\n  renderTriangleInSVG,\n  cleanupCircleFeedbackInSVG,\n} from './renderers';\nimport { Circle, Triangle } from './shapes';\nimport { coordinatesFromEvent, euclideanDistance } from './utils';\nimport { shapePickerSubject$, ShapeOption } from '../ShapeSelect';\nimport { shapeStyleConfigSubject$ } from '../ShapeStyleConfig/observables';\n\nimport styles from './styles.module.css';\n\nexport const DIV_CONTAINER_TEST_ID = 'board-container-test-id';\nexport const SVG_BOARD_TEST_ID = 'board-svg-test-id';\n\nconst REF_NOT_READY = 'ASSERT: ref NOT ready!';\n\nexport const Board: React.FC<{}> = () => {\n  const [state, setSharedState] = useSharedState(boardSubject$);\n  const [{ shape }] = useSharedState(shapePickerSubject$);\n  const [shapeStyleConfig] = useSharedState(shapeStyleConfigSubject$);\n\n  const refDiv = useRef<HTMLDivElement>(null);\n  const refSvg = useRef<SVGSVGElement>(null);\n\n  useEffect(() => {\n    let circleCenter: { x: number; y: number } | undefined = undefined;\n    if (!refDiv.current) {\n      throw new Error(REF_NOT_READY);\n    }\n\n    if (!refSvg.current) {\n      throw new Error(REF_NOT_READY);\n    }\n\n    const obs$ = makeObservableOfClickEventsOnDiv(refDiv.current);\n    const obs = (event: MouseEvent): void => {\n      const [x, y] = coordinatesFromEvent(event);\n      circleCenter = shape === ShapeOption.Circle ? { x, y } : undefined;\n    };\n    const sub = obs$.subscribe(obs);\n\n    let subscription: Subscription;\n    let subFeedback: Subscription;\n    switch (shape) {\n      case ShapeOption.Circle: {\n        const obsFeedback$ = makeObservableOfMouseMoveEventsOnDiv(\n          refDiv.current\n        );\n        const observerFeedback = (event: MouseEvent): void => {\n          if (refSvg.current && circleCenter) {\n            const { x, y } = circleCenter;\n            const [x1, y1] = coordinatesFromEvent(event);\n            const r = euclideanDistance([x, y], [x1, y1]);\n            const feedbackCircle = {\n              cx: x,\n              cy: y,\n              r,\n            };\n            renderCircleFeedbackInSVG(refSvg.current, feedbackCircle, {\n              fill: 'none',\n              opacity: '0.5',\n              stroke: shapeStyleConfig.stroke,\n              'stroke-dasharray': shapeStyleConfig['stroke-dasharray'],\n            });\n          }\n        };\n        const observable$ = makeObservableOfCircles(refDiv.current);\n        const observer = (circle: Circle): void => {\n          if (refSvg.current) {\n            renderCircleInSVG(refSvg.current, circle, shapeStyleConfig);\n            cleanupCircleFeedbackInSVG(refSvg.current);\n          }\n          setSharedState({\n            ...state,\n            circlesDrawn: state.circlesDrawn + 1,\n            clickCount: state.clickCount + 2,\n            lastClick: [circle.cx, circle.cy],\n          });\n        };\n\n        subscription = observable$.subscribe(observer);\n        subFeedback = obsFeedback$.subscribe(observerFeedback);\n        break;\n      }\n\n      case ShapeOption.Triangle: {\n        const observable$ = makeObservableOfTriangles(refDiv.current);\n        const observer = (triangle: Triangle): void => {\n          if (refSvg.current) {\n            renderTriangleInSVG(refSvg.current, triangle, shapeStyleConfig);\n          }\n          setSharedState({\n            ...state,\n            clickCount: state.clickCount + 3,\n            trianglesDrawn: state.trianglesDrawn + 1,\n          });\n        };\n\n        subscription = observable$.subscribe(observer);\n        break;\n      }\n\n      default:\n        const msg = `TODO: ${shape} not yet implemented`;\n        throw new Error(msg);\n    }\n\n    return (): void => {\n      if (subscription) {\n        subscription.unsubscribe();\n      }\n      if (subFeedback) {\n        subFeedback.unsubscribe();\n      }\n      sub.unsubscribe();\n    };\n  }, [setSharedState, shape, shapeStyleConfig, state]);\n\n  return (\n    <div\n      className={styles.board}\n      data-testid={DIV_CONTAINER_TEST_ID}\n      ref={refDiv}\n    >\n      <svg\n        data-testid={SVG_BOARD_TEST_ID}\n        height=\"100%\"\n        preserveAspectRatio={'xMinYMin meet'}\n        ref={refSvg}\n        width=\"100%\"\n      />\n    </div>\n  );\n};\n","export enum DashArray {\n  Three = '3',\n  Four = '4',\n  FiveTen = '5 10',\n  Odd = '4 1 2',\n  Even = '4 1 2 3',\n  Other = '20 10 5 5 5 10',\n}\n\nexport interface ShapeStyleConfigState {\n  fill?: string;\n  opacity?: string;\n  stroke?: string;\n  'stroke-opacity'?: string;\n  'stroke-dasharray'?: DashArray;\n  'stroke-width'?: string;\n}\n","import React from 'react';\n\nimport styles from './styles.module.css';\n\nexport const DIV_CONTAINER_TEST_ID = 'fallback-ui-div-container-test-id';\n\ninterface Props {\n  error: Error;\n  errorInfo?: React.ErrorInfo;\n  eventId?: string;\n  onReportCrashButtonClick: () => void;\n}\n\nexport const FallbackUI: React.FC<Props> = props => {\n  const { error, errorInfo, eventId, onReportCrashButtonClick } = props;\n\n  return (\n    <div className={styles['fallback-ui']} data-testid={DIV_CONTAINER_TEST_ID}>\n      <h1>Something went wrong.</h1>\n      <details>\n        {error.toString()}\n        <br />\n        {errorInfo && errorInfo.componentStack}\n      </details>\n      {eventId && (\n        <button onClick={onReportCrashButtonClick}>Report feedback</button>\n      )}\n    </div>\n  );\n};\n","import * as Sentry from '@sentry/browser';\nimport React, { ErrorInfo } from 'react';\n\nimport { FallbackUI } from './FallbackUI';\n\ninterface Props {\n  debug?: boolean;\n}\n\ninterface State {\n  error?: Error;\n  errorInfo?: ErrorInfo;\n  eventId?: string;\n}\n\nexport class ErrorBoundary extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = { error: undefined, errorInfo: undefined, eventId: undefined };\n  }\n\n  public componentDidCatch(error: Error, errorInfo: ErrorInfo): void {\n    Sentry.withScope(scope => {\n      scope.setExtras(errorInfo);\n      const eventId = Sentry.captureException(error);\n      this.setState({ error, errorInfo, eventId });\n    });\n  }\n\n  public render(): JSX.Element {\n    const { children, debug } = this.props;\n    const { error, errorInfo, eventId } = this.state;\n\n    if (error && debug) {\n      console.error('--- ERROR ---', error);\n    }\n\n    return error ? (\n      <FallbackUI\n        error={error}\n        errorInfo={errorInfo}\n        eventId={eventId}\n        onReportCrashButtonClick={this.onReportCrash}\n      />\n    ) : (\n      <React.Fragment>{children}</React.Fragment>\n    );\n  }\n\n  private onReportCrash = (): void => {\n    Sentry.showReportDialog({ eventId: this.state.eventId });\n  };\n}\n","import React from 'react';\n\n// import { useSharedState } from '../../hooks';\nimport { Board } from '../Board';\n// import { Board, boardSubject$ } from '../Board';\nimport { ErrorBoundary } from '../ErrorBoundary';\n// import { EventsList } from '../EventsList';\n\n// import styles from './styles.module.css';\n\nexport const Main: React.FC<{}> = () => {\n  //   const [{ coordinates }] = useSharedState(boardSubject$);\n  return (\n    <ErrorBoundary debug={true}>\n      <Board />\n    </ErrorBoundary>\n  );\n  //   return (\n  //     <div className={styles.main}>\n  //       <ErrorBoundary debug={true}>\n  //         <Board />\n  //       </ErrorBoundary>\n  //       <EventsList coordinates={coordinates} />\n  //     </div>\n  //   );\n};\n","import clsx from 'clsx';\nimport { saveAs } from 'file-saver';\nimport React from 'react';\nimport { saveSvgAsPng } from 'save-svg-as-png';\n\nconst saveAsPNG = (): void => {\n  const svg = document.querySelector('svg');\n  if (svg) {\n    saveSvgAsPng(svg, 'drawing.png', {\n      scale: 0.5,\n    });\n  }\n};\n\nconst saveAsSVG = (): void => {\n  const svg = document.querySelector('svg');\n  if (svg) {\n    const serializer = new XMLSerializer();\n    const svgBlob = new Blob([serializer.serializeToString(svg)], {\n      type: 'image/svg+xml',\n    });\n    saveAs(svgBlob, 'disegno.svg');\n  }\n};\n\nexport const Exports: React.FC<{}> = () => {\n  return (\n    <div className={clsx('font-size:biggish')}>\n      <label>Exports</label>\n      <div\n        className={clsx('box', 'stack')}\n        style={{ display: 'flex', flexDirection: 'column' }}\n      >\n        <button onClick={saveAsSVG} style={{ fontSize: '1em' }} type=\"button\">\n          Save as SVG\n        </button>\n        <button onClick={saveAsPNG} style={{ fontSize: '1em' }} type=\"button\">\n          Save as PNG\n        </button>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\n\nimport { useSharedState } from '../../hooks';\nimport { boardSubject$ } from '../Board';\nimport { shapePickerSubject$ } from '../ShapeSelect';\n\nexport const InteractionsLogger: React.FC<{}> = () => {\n  const [{ circlesDrawn, clickCount, trianglesDrawn }] = useSharedState(\n    boardSubject$\n  );\n  const [{ shape }] = useSharedState(shapePickerSubject$);\n\n  return (\n    <div className=\"stack\">\n      <p>{`Selected shape: ${shape}`}</p>\n      <p>{`Click count: ${clickCount}`}</p>\n      <p>{`Circles drawn: ${circlesDrawn}`}</p>\n      <p>{`Triangles drawn: ${trianglesDrawn}`}</p>\n    </div>\n  );\n};\n","import clsx from 'clsx';\nimport React from 'react';\n\nimport { useSharedState } from '../../hooks';\nimport { shapePickerSubject$ } from '../ShapeSelect';\nimport { shapeStyleConfigSubject$ } from './observables';\nimport { DashArray } from './types';\n\nexport const ShapeStyleConfig: React.FC<{}> = () => {\n  const [{ shape }] = useSharedState(shapePickerSubject$);\n  const [state, setSharedState] = useSharedState(shapeStyleConfigSubject$);\n\n  const onFillChange: React.ChangeEventHandler<HTMLInputElement> = event => {\n    setSharedState({\n      ...state,\n      fill: event.target.value,\n    });\n  };\n\n  const onOpacityChange: React.ChangeEventHandler<HTMLInputElement> = event => {\n    setSharedState({\n      ...state,\n      opacity: event.target.value,\n    });\n  };\n\n  const onStrokeChange: React.ChangeEventHandler<HTMLInputElement> = event => {\n    setSharedState({\n      ...state,\n      stroke: event.target.value,\n    });\n  };\n\n  const onStrokeDashArrayChange: React.ChangeEventHandler<\n    HTMLSelectElement\n  > = event => {\n    const options = (event.nativeEvent.srcElement as HTMLSelectElement).options;\n    setSharedState({\n      ...state,\n      'stroke-dasharray': options[options.selectedIndex].value,\n    });\n  };\n\n  const onStrokeOpacityChange: React.ChangeEventHandler<\n    HTMLInputElement\n  > = event => {\n    setSharedState({\n      ...state,\n      'stroke-opacity': event.target.value,\n    });\n  };\n\n  const onStrokeWidthChange: React.ChangeEventHandler<\n    HTMLInputElement\n  > = event => {\n    setSharedState({\n      ...state,\n      'stroke-width': event.target.value,\n    });\n  };\n\n  return (\n    <div className={'font-size:biggish'}>\n      <label>{`Config style for ${shape}`}</label>\n      <div className={clsx('box')}>\n        <div>\n          <label htmlFor=\"fill\">fill</label>\n          <input\n            id=\"fill\"\n            name=\"fill\"\n            onChange={onFillChange}\n            type=\"color\"\n            value={state.fill}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"opacity\">opacity</label>\n          <input\n            id=\"opacity\"\n            max=\"1\"\n            min=\"0\"\n            name=\"opacity\"\n            onChange={onOpacityChange}\n            step=\"0.1\"\n            type=\"number\"\n            value={state.opacity}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"stroke\">stroke</label>\n          <input\n            id=\"stroke\"\n            name=\"stroke\"\n            onChange={onStrokeChange}\n            type=\"color\"\n            value={state.stroke}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"stroke-dasharray\">stroke-dasharray</label>\n          <select\n            id=\"stroke-dasharray\"\n            name=\"stroke-dasharray\"\n            onChange={onStrokeDashArrayChange}\n          >\n            <option value={'none'}>No dashes nor gaps</option>\n            <optgroup label=\"Dashes and gaps of the same size\">\n              <option value={DashArray.Three}>{DashArray.Three}</option>\n              <option value={DashArray.Four}>{DashArray.Four}</option>\n            </optgroup>\n            <optgroup label=\"Dashes and gaps of different size\">\n              <option value={DashArray.FiveTen}>{DashArray.FiveTen}</option>\n              <option value={DashArray.Odd}>{DashArray.Odd}</option>\n              <option value={DashArray.Even}>{DashArray.Even}</option>\n              <option value={DashArray.Other}>{DashArray.Other}</option>\n            </optgroup>\n          </select>\n        </div>\n        <div>\n          <label htmlFor=\"stroke-opacity\">stroke-opacity</label>\n          <input\n            id=\"stroke-opacity\"\n            max=\"1\"\n            min=\"0\"\n            name=\"stroke-opacity\"\n            onChange={onStrokeOpacityChange}\n            step=\"0.1\"\n            type=\"number\"\n            value={state['stroke-opacity']}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"stroke-width\">stroke-width</label>\n          <input\n            id=\"stroke-width\"\n            name=\"stroke-width\"\n            onChange={onStrokeWidthChange}\n            placeholder=\"e.g. 20px\"\n            type=\"text\"\n            value={state['stroke-width']}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import clsx from 'clsx';\nimport React from 'react';\n\nimport { Exports } from '../Exports';\nimport { InteractionsLogger } from '../InteractionsLogger';\nimport { ShapeSelect } from '../ShapeSelect';\nimport { ShapeStyleConfig } from '../ShapeStyleConfig';\n\nexport const DIV_CONTAINER_TEST_ID = 'sidebar-container-test-id';\n\nexport const Sidebar: React.FC<{}> = () => {\n  return (\n    <div className={clsx('stack')} data-testid={DIV_CONTAINER_TEST_ID}>\n      <ShapeSelect />\n      <ShapeStyleConfig />\n      <Exports />\n      <InteractionsLogger />\n    </div>\n  );\n};\n","import clsx from 'clsx';\nimport React, { useEffect } from 'react';\n\ninterface Props {\n  /**\n   * The sidebar and the non-sidebar element.\n   */\n  children: React.ReactElement[];\n\n  /**\n   * Make the adjacent elements adopt their natural height.\n   */\n  noStretch?: boolean;\n\n  /**\n   * The side where the sidebar is on.\n   */\n  side: 'left' | 'right';\n}\n\nexport const SidebarLayout: React.FC<Props> = props => {\n  const { children, noStretch, side } = props;\n\n  useEffect(() => {\n    if (children.length !== 2) {\n      throw new Error('The Sidebar layout must have exactly 2 children');\n    }\n  }, [children, side]);\n\n  return (\n    <div\n      className={clsx(`with-sidebar-on-the-${side}`)}\n      style={{ height: '100%', flexGrow: 1 }}\n    >\n      <div\n        className={clsx(\n          noStretch ? 'not-stretched-wrapper' : 'stretched-wrapper'\n        )}\n      >\n        {children}\n      </div>\n    </div>\n  );\n};\n","import * as Sentry from '@sentry/browser';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { App } from './components/App';\n\nimport './css/index.css';\n\n/**\n * We could use the CDN hosted version of the Sentry JavaScript browser SDK, but\n * Ad blockers would probably block Sentry from submitting crash reports.\n * Instead, we add Sentry as a dependency (unfortunately, this means that it\n * will end up in the final bundle).\n */\nSentry.init({\n  dsn: 'https://94f09b0a51c74127b82e3fa4d47857c2@sentry.io/1547393',\n});\n\nReactDOM.render(<App />, document.getElementById('root'));\n","import React from 'react';\n\nimport { Main } from '../Main';\nimport { Sidebar } from '../Sidebar';\nimport { SidebarLayout } from '../SidebarLayout';\n\nexport const App: React.FC<{}> = () => {\n  return (\n    <SidebarLayout side={'right'}>\n      <Main />\n      <Sidebar />\n    </SidebarLayout>\n  );\n};\n"],"sourceRoot":""}