{"version":3,"sources":["components/ErrorBoundary/styles.module.css","components/EventsList/styles.module.css","components/Main/styles.module.css","components/App/styles.module.css","components/Sidebar/observables.ts","hooks/index.ts","components/Sidebar/Sidebar.tsx","components/Board/utils.ts","components/Board/observables.ts","components/Board/renderers/index.ts","components/Board/Board.tsx","components/InteractionsLogger/InteractionsLogger.tsx","components/ErrorBoundary/ErrorBoundary.tsx","components/EventsList/EventsList.tsx","components/Main/Main.tsx","index.tsx","components/App/App.tsx","components/Board/styles.module.css","components/Sidebar/styles.module.css"],"names":["module","exports","ShapeOption","useSharedState","subject","useState","getValue","state","setState","useEffect","subscription","pipe","skip","subscribe","unsubscribe","next","initialState","dropdownChangesCount","shape","Circle","shapePickerSubject$","BehaviorSubject","Sidebar","props","label","setSharedState","className","clsx","styles","sidebar","data-testid","htmlFor","select","id","name","onChange","event","target","value","Triangle","Rectangle","BezierCurve","style","outline","type","defaultValue","disabled","range","size","checked","width","icon","makeCircleFromPairClicks","pair","ev0","ev1","cx","clientX","cy","clientY","r","p","q","x0","y0","x1","y1","Math","sqrt","pow","euclideanDistance","makeTriangleFromTriplet","triplet","ev2","p0","x","y","p1","p2","makeTripletOfClicks","events","makeObservableOfClickEventsOnDiv","div","eventTarget","fromEvent","boardSubject$","circlesDrawn","clickCount","coordinates","lastClick","trianglesDrawn","renderCircleInSVG","svg","circle","appendChild","c","document","createElementNS","setAttribute","makeSVGCircle","renderTriangleInSVG","triangle","polygon","makeSVGTriangle","Board","refDiv","useRef","refSvg","current","Error","observable$","pairwise","map","makeObservableOfTriangles","msg","board","onClick","domRect","getBoundingClientRect","left","top","coordinatesFromEvent","console","log","ref","inner","height","InteractionsLogger","ErrorBoundary","error","undefined","errorInfo","this","children","debug","toString","componentStack","Fragment","React","Component","EventsList","length","i","key","Main","main","ReactDOM","render","app","getElementById"],"mappings":"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","file":"static/js/main.ecf337f5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"error-boundary\":\"styles-module__error-boundary--2QqXU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"event-list\":\"styles-module__event-list--lfxdY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"styles-module__main--2BLax\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"styles-module__app--UQBRD\"};","import { BehaviorSubject } from 'rxjs';\n\nexport enum ShapeOption {\n  BezierCurve = 'Bezier Curve',\n  Circle = 'Circle',\n  Rectangle = 'Rectangle',\n  Triangle = 'Triangle',\n}\n\ninterface IState {\n  dropdownChangesCount: number;\n  shape: ShapeOption;\n}\n\nexport const initialState: IState = {\n  dropdownChangesCount: 0,\n  shape: ShapeOption.Circle,\n};\n\n/**\n * BehaviorSubject that represents this component's state over time.\n *\n * @see http://reactivex.io/rxjs/manual/overview.html#behaviorsubject\n */\nexport const shapePickerSubject$ = new BehaviorSubject<IState>(initialState);\n","import { useEffect, useState } from 'react';\nimport { BehaviorSubject } from 'rxjs';\nimport { skip } from 'rxjs/operators';\n\nexport const useSharedState = <T>(\n  subject: BehaviorSubject<T>\n): [T, typeof useState] => {\n  const [state, setState] = useState(subject.getValue());\n\n  useEffect(() => {\n    const observer = (state: T) => setState(state);\n    const subscription = subject.pipe(skip(1)).subscribe(observer);\n    return () => subscription.unsubscribe();\n  });\n\n  const newSetState = (state: T) => subject.next(state);\n\n  // @ts-ignore\n  return [state, newSetState];\n};\n","import { Button, Icon, Slider, Switch } from 'antd';\nimport clsx from 'clsx';\nimport React from 'react';\n\nimport { useSharedState } from '../../hooks';\nimport { ShapeOption, shapePickerSubject$ } from './observables';\nimport styles from './styles.module.css';\n\nexport const DIV_CONTAINER_TEST_ID = 'sidebar-container-test-id';\nexport const SHAPE_SELECT_TEST_ID = 'sidebar-select-test-id';\nconst SHAPE_SELECT_ID = 'shape-select-id';\nconst SHAPE_SELECT_NAME = 'shape-selector';\n\ninterface IProps {\n  label: string;\n}\n\nexport const Sidebar: React.FC<IProps> = props => {\n  const { label } = props;\n\n  const [state, setSharedState] = useSharedState(shapePickerSubject$);\n  const { dropdownChangesCount, shape } = state;\n\n  const onShapeChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setSharedState({\n      dropdownChangesCount: state.dropdownChangesCount + 1,\n      shape: event.target.value as ShapeOption,\n    });\n  };\n\n  return (\n    <div\n      className={clsx(styles.sidebar, 'stack')}\n      data-testid={DIV_CONTAINER_TEST_ID}\n    >\n      <div className={clsx('stack-small')}>\n        <label htmlFor={SHAPE_SELECT_ID}>{label}</label>\n        <select\n          className={styles.select}\n          id={SHAPE_SELECT_ID}\n          data-testid={SHAPE_SELECT_TEST_ID}\n          name={SHAPE_SELECT_NAME}\n          onChange={onShapeChange}\n        >\n          <option value={ShapeOption.Circle}>Circle</option>\n          <option value={ShapeOption.Triangle}>Triangle</option>\n          <option value={ShapeOption.Rectangle}>Rectangle</option>\n          <option value={ShapeOption.BezierCurve}>Bezier Curve</option>\n        </select>\n      </div>\n\n      <div className={clsx('stack-large')}>\n        <p>{`You selected ${shape}`}</p>\n        <p>{`You changed shape ${dropdownChangesCount} times`}</p>\n      </div>\n\n      <div className=\"stack-small\">\n        <p>{'Some icons'}</p>\n        <div style={{ outline: '0.2rem solid orange' }}>\n          <Icon type=\"caret-up\" />\n          <Icon type=\"play-circle\" />\n          <Icon type=\"radar-chart\" />\n          <Icon type=\"heat-map\" />\n        </div>\n        {'Some sliders and switches'}\n        <div style={{ outline: '0.2rem solid orange' }}>\n          <Slider defaultValue={30} disabled={true} />\n          <Slider range defaultValue={[20, 50]} disabled={false} />\n          {'Disabled:'}\n          <Switch size=\"small\" checked={false} style={{ width: '33%' }} />\n          {'Enabled:'}\n          <Switch size=\"small\" checked={true} style={{ width: '50%' }} />\n        </div>\n        <Button type=\"primary\" shape=\"circle\" icon=\"search\" />\n        <Button type=\"primary\">\n          <span>Button with icon</span>\n          <Icon type=\"taobao\" />\n        </Button>\n        <Button type=\"dashed\" icon=\"search\">\n          Search\n        </Button>\n      </div>\n\n      <Button type=\"primary\">\n        <span>Button with icon</span>\n        <Icon type=\"taobao\" />\n      </Button>\n    </div>\n  );\n};\n","import { ICircle, ITriangle } from './shapes';\nimport { Coords, PairClicks, TripletClicks } from './types';\n\nexport const euclideanDistance = (p: Coords, q: Coords) => {\n  const [x0, y0] = p;\n  const [x1, y1] = q;\n  return Math.sqrt(Math.pow(x1 - x0, 2) + Math.pow(y1 - y0, 2));\n};\n\nexport const makeCircleFromPairClicks = (pair: PairClicks): ICircle => {\n  const [ev0, ev1] = pair;\n  const cx = ev0.clientX;\n  const cy = ev0.clientY;\n  const r = euclideanDistance([cx, cy], [ev1.clientX, ev1.clientY]);\n  return { cx, cy, r };\n};\n\nexport const makeTriangleFromTriplet = (triplet: TripletClicks): ITriangle => {\n  const [ev0, ev1, ev2] = triplet;\n  const p0 = { x: ev0.clientX, y: ev0.clientY };\n  const p1 = { x: ev1.clientX, y: ev1.clientY };\n  const p2 = { x: ev2.clientX, y: ev2.clientY };\n  return { p0, p1, p2 };\n};\n\nexport function coordinatesFromEvent(\n  event: React.MouseEvent<HTMLElement, MouseEvent> | MouseEvent\n): Coords {\n  const domRect = (event.target as HTMLDivElement).getBoundingClientRect();\n  const { clientX, clientY } = event;\n  const x = clientX - domRect.left;\n  const y = clientY - domRect.top;\n  return [x, y];\n}\n\nexport const makeTripletOfClicks = (events: [PairClicks, PairClicks]) => {\n  const ev0 = events[0][0];\n  const ev1 = events[0][1];\n  const ev2 = events[1][1];\n  const triplet = [ev0, ev1, ev2] as TripletClicks;\n  return triplet;\n};\n","import { BehaviorSubject, fromEvent } from 'rxjs';\nimport { map, pairwise } from 'rxjs/operators';\nimport { FromEventTarget } from 'rxjs/internal/observable/fromEvent';\n\nimport { Coords } from './types';\nimport {\n  makeCircleFromPairClicks,\n  makeTriangleFromTriplet,\n  makeTripletOfClicks,\n} from './utils';\n\nconst makeObservableOfClickEventsOnTarget = (\n  eventTarget: FromEventTarget<MouseEvent>\n) => {\n  return fromEvent(eventTarget, 'click');\n};\n\nexport const makeObservableOfClickEventsOnDiv = (div: HTMLDivElement) =>\n  makeObservableOfClickEventsOnTarget(div);\n\nexport const makeObservableOfCircles = (div: HTMLDivElement) => {\n  return makeObservableOfClickEventsOnDiv(div).pipe(\n    pairwise(),\n    map(makeCircleFromPairClicks)\n  );\n};\n\nexport const makeObservableOfTriangles = (div: HTMLDivElement) => {\n  return makeObservableOfClickEventsOnDiv(div).pipe(\n    pairwise(),\n    pairwise(),\n    map(makeTripletOfClicks),\n    map(makeTriangleFromTriplet)\n  );\n};\n\ninterface IState {\n  circlesDrawn: number;\n  clickCount: number;\n  coordinates: Coords[];\n  lastClick: Coords;\n  trianglesDrawn: number;\n}\n\nconst initialState: IState = {\n  circlesDrawn: 0,\n  clickCount: 0,\n  coordinates: [] as Coords[],\n  lastClick: [0, 0] as Coords,\n  trianglesDrawn: 0,\n};\n\n/**\n * BehaviorSubject that represents this component's state over time.\n *\n * @see http://reactivex.io/rxjs/manual/overview.html#behaviorsubject\n */\nexport const boardSubject$ = new BehaviorSubject<IState>(initialState);\n","import { ICircle, ITriangle } from '../shapes';\n\nconst NAMESPACE_URI = 'http://www.w3.org/2000/svg';\n\nconst makeSVGCircle = (c: ICircle) => {\n  const circle = document.createElementNS(NAMESPACE_URI, 'circle');\n  circle.setAttribute('cx', `${c.cx}`);\n  circle.setAttribute('cy', `${c.cy}`);\n  circle.setAttribute('r', `${c.r}`);\n  circle.setAttribute('fill', 'red');\n  circle.setAttribute('stroke', 'black');\n  circle.setAttribute('stroke-width', '20px');\n  circle.setAttribute('stroke-opacity', '0.5');\n  return circle;\n};\n\nexport const renderCircleInSVG = (svg: SVGSVGElement, circle: ICircle) => {\n  svg.appendChild(makeSVGCircle(circle));\n};\n\nconst makeSVGTriangle = (triangle: ITriangle) => {\n  const { p0, p1, p2 } = triangle;\n  const polygon = document.createElementNS(NAMESPACE_URI, 'polygon');\n  polygon.setAttribute(\n    'points',\n    `${p0.x},${p0.y} ${p1.x},${p1.y} ${p2.x},${p2.y}`\n  );\n  polygon.setAttribute('fill', 'green');\n  polygon.setAttribute('stroke', 'orange');\n  polygon.setAttribute('stroke-width', '20px');\n  polygon.setAttribute('stroke-opacity', '0.5');\n  return polygon;\n};\n\nexport const renderTriangleInSVG = (\n  svg: SVGSVGElement,\n  triangle: ITriangle\n) => {\n  svg.appendChild(makeSVGTriangle(triangle));\n};\n","import React, { useEffect, useRef } from 'react';\n\nimport { useSharedState } from '../../hooks';\nimport {\n  boardSubject$,\n  makeObservableOfCircles,\n  makeObservableOfTriangles,\n} from './observables';\nimport { renderCircleInSVG, renderTriangleInSVG } from './renderers';\nimport { ICircle, ITriangle } from './shapes';\nimport { coordinatesFromEvent } from './utils';\nimport { shapePickerSubject$, ShapeOption } from '../Sidebar';\n\nimport styles from './styles.module.css';\nimport { Subscription } from 'rxjs';\n\nexport const DIV_CONTAINER_TEST_ID = 'board-container-test-id';\nexport const SVG_BOARD_TEST_ID = 'board-svg-test-id';\n\nconst REF_NOT_READY = 'ASSERT: ref NOT ready!';\n\nexport const Board: React.FC<{}> = () => {\n  const [state, setSharedState] = useSharedState(boardSubject$);\n  const [{ shape }] = useSharedState(shapePickerSubject$);\n\n  const refDiv = useRef<HTMLDivElement>(null);\n  const refSvg = useRef<SVGSVGElement>(null);\n\n  useEffect(() => {\n    if (!refDiv.current) {\n      throw new Error(REF_NOT_READY);\n    }\n\n    if (!refSvg.current) {\n      throw new Error(REF_NOT_READY);\n    }\n\n    let subscription: Subscription;\n    switch (shape) {\n      case ShapeOption.Circle: {\n        const observable$ = makeObservableOfCircles(refDiv.current);\n        const observer = (circle: ICircle) => {\n          // side-effects on the board\n          renderCircleInSVG(refSvg.current!, circle);\n          // side-effects on the shared state\n          setSharedState({\n            ...state,\n            circlesDrawn: state.circlesDrawn + 1,\n            clickCount: state.clickCount + 2,\n          });\n        };\n\n        subscription = observable$.subscribe(observer);\n        break;\n      }\n\n      case ShapeOption.Triangle: {\n        const observable$ = makeObservableOfTriangles(refDiv.current);\n        const observer = (triangle: ITriangle) => {\n          // side-effect on the board\n          renderTriangleInSVG(refSvg.current!, triangle);\n          // side-effects on the shared state\n          setSharedState({\n            ...state,\n            clickCount: state.clickCount + 3,\n            trianglesDrawn: state.trianglesDrawn + 1,\n          });\n        };\n\n        subscription = observable$.subscribe(observer);\n        break;\n      }\n\n      default:\n        const msg = `TODO: ${shape} not yet implemented`;\n        // alert(msg);\n        throw new Error(msg);\n    }\n\n    return () => {\n      if (subscription) {\n        subscription.unsubscribe();\n      }\n    };\n  }, [refDiv, refSvg, shape, state]);\n\n  const onClick = (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    const [x, y] = coordinatesFromEvent(event);\n    console.log('onClick', x, y);\n  };\n\n  return (\n    <div\n      className={styles.board}\n      data-testid={DIV_CONTAINER_TEST_ID}\n      onClick={onClick}\n      ref={refDiv}\n    >\n      <div className={styles.inner}>\n        <svg\n          className={styles['svg-board']}\n          data-testid={SVG_BOARD_TEST_ID}\n          height=\"100%\"\n          ref={refSvg}\n          width=\"100%\"\n        />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\n\nimport { useSharedState } from '../../hooks';\nimport { shapePickerSubject$ } from '../Sidebar';\nimport { boardSubject$ } from '../Board';\n\nexport const InteractionsLogger: React.FC<{}> = () => {\n  const [{ circlesDrawn, clickCount, trianglesDrawn }] = useSharedState(\n    boardSubject$\n  );\n  const [{ shape }] = useSharedState(shapePickerSubject$);\n\n  return (\n    <div style={{ outline: '0.2rem solid orange' }}>\n      <p>{`Selected shape: ${shape}`}</p>\n      <p>{`Click count: ${clickCount}`}</p>\n      <p>{`Circles drawn: ${circlesDrawn}`}</p>\n      <p>{`Triangles drawn: ${trianglesDrawn}`}</p>\n    </div>\n  );\n};\n","import React, { ErrorInfo } from 'react';\n\nimport styles from './styles.module.css';\n\ninterface IProps {\n  debug?: boolean;\n}\n\ninterface IState {\n  error?: Error;\n  errorInfo?: ErrorInfo;\n}\n\nexport const DIV_CONTAINER_TEST_ID = 'error-boundary-div-container-test-id';\n\nexport class ErrorBoundary extends React.Component<IProps, IState> {\n  constructor(props: IProps) {\n    super(props);\n    this.state = { error: undefined, errorInfo: undefined };\n  }\n\n  public componentDidCatch(error: Error, errorInfo: ErrorInfo) {\n    this.setState({\n      error,\n      errorInfo,\n    });\n  }\n\n  public render() {\n    const { children, debug } = this.props;\n    const { error, errorInfo } = this.state;\n    if (error && debug) {\n      console.error('--- ERROR ---', error);\n    }\n    return error ? (\n      <div\n        className={styles['error-boundary']}\n        data-testid={DIV_CONTAINER_TEST_ID}\n      >\n        <h1>Something went wrong.</h1>\n        <details>\n          {error && error.toString()}\n          <br />\n          {errorInfo && errorInfo.componentStack}\n        </details>\n      </div>\n    ) : (\n      <React.Fragment>{children}</React.Fragment>\n    );\n  }\n}\n","import React from 'react';\n\nimport { Coords } from '../Board/types';\n\nimport styles from './styles.module.css';\n\ninterface IProps {\n  coordinates: Coords[];\n}\n\nexport const EventsList: React.FC<IProps> = props => {\n  const { coordinates } = props;\n  return (\n    <div className={styles['event-list']}>\n      <p>{`Got ${coordinates.length} coordinates`}</p>\n      <ol>\n        {coordinates.map((c, i) => (\n          <li key={`${c[0]}-${c[1]}-${i}`}>{`x: ${c[0]}; y: ${c[1]}`}</li>\n        ))}\n      </ol>\n    </div>\n  );\n};\n","import React from 'react';\n\nimport { useSharedState } from '../../hooks';\nimport { Board, boardSubject$ } from '../Board';\nimport { ErrorBoundary } from '../ErrorBoundary';\nimport { EventsList } from '../EventsList';\n\nimport styles from './styles.module.css';\n\nexport const Main: React.FC<{}> = () => {\n  const [{ coordinates }] = useSharedState(boardSubject$);\n  return (\n    <div className={styles.main}>\n      <ErrorBoundary debug={true}>\n        <Board />\n      </ErrorBoundary>\n      <EventsList coordinates={coordinates} />\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './css/index.css';\n\nimport { App } from './components/App';\n// import * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n","import React from 'react';\n\nimport { InteractionsLogger } from '../InteractionsLogger';\nimport { Main } from '../Main';\nimport { Sidebar } from '../Sidebar';\n\nimport styles from './styles.module.css';\n\nexport const App: React.FC<{}> = () => {\n  return (\n    <div className={styles.app}>\n      <Main />\n      <Sidebar label={'Choose a shape to draw:'} />\n      <InteractionsLogger />\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"board\":\"styles-module__board--1-URo\",\"circle-center\":\"styles-module__circle-center--2hzvi\",\"inner\":\"styles-module__inner--2bN0y\",\"svg-board\":\"styles-module__svg-board--qNj_X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"styles-module__sidebar--179zX\",\"select\":\"styles-module__select--34NKF\"};"],"sourceRoot":""}