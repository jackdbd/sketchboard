{"version":3,"sources":["components/ErrorBoundary/styles.module.css","hooks/index.ts","components/Board/utils.ts","components/Sidebar/observables.ts","components/Board/observables.ts","components/Board/renderers/index.ts","components/Sidebar/Sidebar.tsx","components/Board/Board.tsx","components/ErrorBoundary/FallbackUI.tsx","components/ErrorBoundary/ErrorBoundary.tsx","components/Main/Main.tsx","components/SidebarLayout/SidebarLayout.tsx","index.tsx","components/App/App.tsx","components/Sidebar/styles.module.css","components/Board/styles.module.css"],"names":["module","exports","useSharedState","subject","useState","getValue","state","setState","useEffect","subscription","pipe","skip","subscribe","unsubscribe","next","makeCircleFromPairClicks","pair","ev0","ev1","cx","clientX","cy","clientY","r","p","q","x0","y0","x1","y1","Math","sqrt","pow","euclideanDistance","makeTriangleFromTriplet","triplet","ev2","p0","x","y","p1","p2","ShapeOption","makeTripletOfClicks","events","makeObservableOfClickEventsOnDiv","div","eventTarget","fromEvent","boardSubject$","BehaviorSubject","circlesDrawn","clickCount","coordinates","lastClick","trianglesDrawn","renderCircleInSVG","svg","circle","appendChild","c","document","createElementNS","setAttribute","makeSVGCircle","renderTriangleInSVG","triangle","polygon","makeSVGTriangle","initialState","dropdownChangesCount","shape","Circle","shapePickerSubject$","Sidebar","props","label","setSharedState","className","clsx","styles","sidebar","data-testid","htmlFor","select","id","name","onChange","event","target","value","Triangle","Rectangle","BezierCurve","style","outline","type","defaultValue","disabled","range","size","checked","width","icon","Board","refDiv","useRef","refSvg","current","Error","observable$","pairwise","map","makeObservableOfTriangles","msg","board","onClick","domRect","getBoundingClientRect","left","top","coordinatesFromEvent","console","log","ref","height","preserveAspectRatio","FallbackUI","error","errorInfo","eventId","onReportCrashButtonClick","toString","componentStack","ErrorBoundary","onReportCrash","Sentry","undefined","scope","setExtras","this","children","debug","Fragment","React","Component","Main","SidebarLayout","noStretch","side","length","dsn","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.c041215e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"fallback-ui\":\"styles-module__fallback-ui--jafEg\"};","import { useEffect, useState } from 'react';\nimport { BehaviorSubject } from 'rxjs';\nimport { skip } from 'rxjs/operators';\n\nexport const useSharedState = <T>(\n  subject: BehaviorSubject<T>\n): [T, typeof useState] => {\n  const [state, setState] = useState(subject.getValue());\n\n  useEffect(() => {\n    const observer = (state: T): void => setState(state);\n    /*\n      The first event is skipped because a BehaviorSubject always notifies its\n      subscribers (i.e observers) of its initial state.\n    */\n    const subscription = subject.pipe(skip(1)).subscribe(observer);\n    return (): void => subscription.unsubscribe();\n  });\n\n  const newSetState = (state: T): void => subject.next(state);\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n  // @ts-ignore\n  return [state, newSetState];\n};\n","import { Circle, Triangle } from './shapes';\nimport { Coords, PairClicks, TripletClicks } from './types';\n\nexport const euclideanDistance = (p: Coords, q: Coords): number => {\n  const [x0, y0] = p;\n  const [x1, y1] = q;\n  return Math.sqrt(Math.pow(x1 - x0, 2) + Math.pow(y1 - y0, 2));\n};\n\nexport const makeCircleFromPairClicks = (pair: PairClicks): Circle => {\n  const [ev0, ev1] = pair;\n  const cx = ev0.clientX;\n  const cy = ev0.clientY;\n  const r = euclideanDistance([cx, cy], [ev1.clientX, ev1.clientY]);\n  return { cx, cy, r };\n};\n\nexport const makeTriangleFromTriplet = (triplet: TripletClicks): Triangle => {\n  const [ev0, ev1, ev2] = triplet;\n  const p0 = { x: ev0.clientX, y: ev0.clientY };\n  const p1 = { x: ev1.clientX, y: ev1.clientY };\n  const p2 = { x: ev2.clientX, y: ev2.clientY };\n  return { p0, p1, p2 };\n};\n\nexport function coordinatesFromEvent(\n  event: React.MouseEvent<HTMLElement, MouseEvent> | MouseEvent\n): Coords {\n  const domRect = (event.target as HTMLDivElement).getBoundingClientRect();\n  const { clientX, clientY } = event;\n  const x = clientX - domRect.left;\n  const y = clientY - domRect.top;\n  return [x, y];\n}\n\nexport const makeTripletOfClicks = (\n  events: [PairClicks, PairClicks]\n): TripletClicks => {\n  const ev0 = events[0][0];\n  const ev1 = events[0][1];\n  const ev2 = events[1][1];\n  const triplet = [ev0, ev1, ev2] as TripletClicks;\n  return triplet;\n};\n","import { BehaviorSubject } from 'rxjs';\n\nexport enum ShapeOption {\n  BezierCurve = 'Bezier Curve',\n  Circle = 'Circle',\n  Rectangle = 'Rectangle',\n  Triangle = 'Triangle',\n}\n\ninterface State {\n  dropdownChangesCount: number;\n  shape: ShapeOption;\n}\n\nexport const initialState: State = {\n  dropdownChangesCount: 0,\n  shape: ShapeOption.Circle,\n};\n\n/**\n * BehaviorSubject that represents this component's state over time.\n *\n * @see http://reactivex.io/rxjs/manual/overview.html#behaviorsubject\n */\nexport const shapePickerSubject$ = new BehaviorSubject<State>(initialState);\n","import { BehaviorSubject, fromEvent, Observable } from 'rxjs';\nimport { map, pairwise } from 'rxjs/operators';\nimport { FromEventTarget } from 'rxjs/internal/observable/fromEvent';\n\nimport { Coords } from './types';\nimport {\n  makeCircleFromPairClicks,\n  makeTriangleFromTriplet,\n  makeTripletOfClicks,\n} from './utils';\nimport { Circle, Triangle } from './shapes';\n\nconst makeObservableOfClickEventsOnTarget = (\n  eventTarget: FromEventTarget<MouseEvent>\n): Observable<MouseEvent> => {\n  return fromEvent(eventTarget, 'click');\n};\n\nexport const makeObservableOfClickEventsOnDiv = (\n  div: HTMLDivElement\n): Observable<MouseEvent> => makeObservableOfClickEventsOnTarget(div);\n\nexport const makeObservableOfCircles = (\n  div: HTMLDivElement\n): Observable<Circle> => {\n  return makeObservableOfClickEventsOnDiv(div).pipe(\n    pairwise(),\n    map(makeCircleFromPairClicks)\n  );\n};\n\nexport const makeObservableOfTriangles = (\n  div: HTMLDivElement\n): Observable<Triangle> => {\n  return makeObservableOfClickEventsOnDiv(div).pipe(\n    pairwise(),\n    pairwise(),\n    map(makeTripletOfClicks),\n    map(makeTriangleFromTriplet)\n  );\n};\n\ninterface State {\n  circlesDrawn: number;\n  clickCount: number;\n  coordinates: Coords[];\n  lastClick: Coords;\n  trianglesDrawn: number;\n}\n\nconst initialState: State = {\n  circlesDrawn: 0,\n  clickCount: 0,\n  coordinates: [] as Coords[],\n  lastClick: [0, 0] as Coords,\n  trianglesDrawn: 0,\n};\n\n/**\n * BehaviorSubject that represents this component's state over time.\n *\n * @see http://reactivex.io/rxjs/manual/overview.html#behaviorsubject\n */\nexport const boardSubject$ = new BehaviorSubject<State>(initialState);\n","import { Circle, Triangle } from '../shapes';\n\nconst NAMESPACE_URI = 'http://www.w3.org/2000/svg';\n\nconst makeSVGCircle = (c: Circle): SVGCircleElement => {\n  const circle = document.createElementNS(NAMESPACE_URI, 'circle');\n  circle.setAttribute('cx', `${c.cx}`);\n  circle.setAttribute('cy', `${c.cy}`);\n  circle.setAttribute('r', `${c.r}`);\n  circle.setAttribute('fill', 'red');\n  circle.setAttribute('stroke', 'black');\n  circle.setAttribute('stroke-width', '20px');\n  circle.setAttribute('stroke-opacity', '0.5');\n  return circle;\n};\n\nexport const renderCircleInSVG = (svg: SVGSVGElement, circle: Circle): void => {\n  svg.appendChild(makeSVGCircle(circle));\n};\n\nconst makeSVGTriangle = (triangle: Triangle): SVGPolygonElement => {\n  const { p0, p1, p2 } = triangle;\n  const polygon = document.createElementNS(NAMESPACE_URI, 'polygon');\n  polygon.setAttribute(\n    'points',\n    `${p0.x},${p0.y} ${p1.x},${p1.y} ${p2.x},${p2.y}`\n  );\n  polygon.setAttribute('fill', 'green');\n  polygon.setAttribute('stroke', 'orange');\n  polygon.setAttribute('stroke-width', '20px');\n  polygon.setAttribute('stroke-opacity', '0.5');\n  return polygon;\n};\n\nexport const renderTriangleInSVG = (\n  svg: SVGSVGElement,\n  triangle: Triangle\n): void => {\n  svg.appendChild(makeSVGTriangle(triangle));\n};\n","import { Button, Icon, Slider, Switch } from 'antd';\nimport clsx from 'clsx';\nimport React from 'react';\n\nimport { useSharedState } from '../../hooks';\nimport { ShapeOption, shapePickerSubject$ } from './observables';\nimport styles from './styles.module.css';\n\nexport const DIV_CONTAINER_TEST_ID = 'sidebar-container-test-id';\nexport const SHAPE_SELECT_TEST_ID = 'sidebar-select-test-id';\nconst SHAPE_SELECT_ID = 'shape-select-id';\nconst SHAPE_SELECT_NAME = 'shape-selector';\n\ninterface Props {\n  label: string;\n}\n\nexport const Sidebar: React.FC<Props> = props => {\n  const { label } = props;\n\n  const [state, setSharedState] = useSharedState(shapePickerSubject$);\n  const { dropdownChangesCount, shape } = state;\n\n  const onShapeChange = (event: React.ChangeEvent<HTMLSelectElement>): void => {\n    setSharedState({\n      dropdownChangesCount: state.dropdownChangesCount + 1,\n      shape: event.target.value as ShapeOption,\n    });\n  };\n\n  return (\n    <div\n      className={clsx(styles.sidebar, 'stack')}\n      data-testid={DIV_CONTAINER_TEST_ID}\n    >\n      <div className={clsx('stack-small')}>\n        <label htmlFor={SHAPE_SELECT_ID}>{label}</label>\n        <select\n          className={styles.select}\n          id={SHAPE_SELECT_ID}\n          data-testid={SHAPE_SELECT_TEST_ID}\n          name={SHAPE_SELECT_NAME}\n          onChange={onShapeChange}\n        >\n          <option value={ShapeOption.Circle}>Circle</option>\n          <option value={ShapeOption.Triangle}>Triangle</option>\n          <option value={ShapeOption.Rectangle}>Rectangle</option>\n          <option value={ShapeOption.BezierCurve}>Bezier Curve</option>\n        </select>\n      </div>\n\n      <div className={clsx('stack-large')}>\n        <p>{`You selected ${shape}`}</p>\n        <p>{`You changed shape ${dropdownChangesCount} times`}</p>\n      </div>\n\n      <div className=\"stack-small\">\n        <p>{'Some icons'}</p>\n        <div style={{ outline: '0.2rem solid orange' }}>\n          <Icon type=\"caret-up\" />\n          <Icon type=\"play-circle\" />\n          <Icon type=\"radar-chart\" />\n          <Icon type=\"heat-map\" />\n        </div>\n        {'Some sliders and switches'}\n        <div style={{ outline: '0.2rem solid orange' }}>\n          <Slider defaultValue={30} disabled={true} />\n          <Slider range defaultValue={[20, 50]} disabled={false} />\n          {'Disabled:'}\n          <Switch size=\"small\" checked={false} style={{ width: '33%' }} />\n          {'Enabled:'}\n          <Switch size=\"small\" checked={true} style={{ width: '50%' }} />\n        </div>\n        <Button type=\"primary\" shape=\"circle\" icon=\"search\" />\n        <Button type=\"primary\">\n          <span>Button with icon</span>\n          <Icon type=\"taobao\" />\n        </Button>\n        <Button type=\"dashed\" icon=\"search\">\n          Search\n        </Button>\n      </div>\n\n      <Button type=\"primary\">\n        <span>Button with icon</span>\n        <Icon type=\"taobao\" />\n      </Button>\n    </div>\n  );\n};\n","import React, { useEffect, useRef } from 'react';\n\nimport { useSharedState } from '../../hooks';\nimport {\n  boardSubject$,\n  makeObservableOfCircles,\n  makeObservableOfTriangles,\n} from './observables';\nimport { renderCircleInSVG, renderTriangleInSVG } from './renderers';\nimport { Circle, Triangle } from './shapes';\nimport { coordinatesFromEvent } from './utils';\nimport { shapePickerSubject$, ShapeOption } from '../Sidebar';\n\nimport styles from './styles.module.css';\nimport { Subscription } from 'rxjs';\n\nexport const DIV_CONTAINER_TEST_ID = 'board-container-test-id';\nexport const SVG_BOARD_TEST_ID = 'board-svg-test-id';\n\nconst REF_NOT_READY = 'ASSERT: ref NOT ready!';\n\nexport const Board: React.FC<{}> = () => {\n  const [state, setSharedState] = useSharedState(boardSubject$);\n  const [{ shape }] = useSharedState(shapePickerSubject$);\n\n  const refDiv = useRef<HTMLDivElement>(null);\n  const refSvg = useRef<SVGSVGElement>(null);\n\n  useEffect(() => {\n    if (!refDiv.current) {\n      throw new Error(REF_NOT_READY);\n    }\n\n    if (!refSvg.current) {\n      throw new Error(REF_NOT_READY);\n    }\n\n    let subscription: Subscription;\n    switch (shape) {\n      case ShapeOption.Circle: {\n        const observable$ = makeObservableOfCircles(refDiv.current);\n        const observer = (circle: Circle): void => {\n          if (refSvg.current) {\n            renderCircleInSVG(refSvg.current, circle);\n          }\n          setSharedState({\n            ...state,\n            circlesDrawn: state.circlesDrawn + 1,\n            clickCount: state.clickCount + 2,\n          });\n        };\n\n        subscription = observable$.subscribe(observer);\n        break;\n      }\n\n      case ShapeOption.Triangle: {\n        const observable$ = makeObservableOfTriangles(refDiv.current);\n        const observer = (triangle: Triangle): void => {\n          if (refSvg.current) {\n            renderTriangleInSVG(refSvg.current, triangle);\n          }\n          setSharedState({\n            ...state,\n            clickCount: state.clickCount + 3,\n            trianglesDrawn: state.trianglesDrawn + 1,\n          });\n        };\n\n        subscription = observable$.subscribe(observer);\n        break;\n      }\n\n      default:\n        const msg = `TODO: ${shape} not yet implemented`;\n        // alert(msg);\n        throw new Error(msg);\n    }\n\n    return (): void => {\n      if (subscription) {\n        subscription.unsubscribe();\n      }\n    };\n  }, [setSharedState, shape, state]);\n\n  const onClick = (\n    event: React.MouseEvent<HTMLDivElement, MouseEvent>\n  ): void => {\n    const [x, y] = coordinatesFromEvent(event);\n    console.log('onClick', x, y);\n  };\n\n  return (\n    <div\n      className={styles.board}\n      data-testid={DIV_CONTAINER_TEST_ID}\n      onClick={onClick}\n      ref={refDiv}\n    >\n      <svg\n        className={styles['svg-board']}\n        data-testid={SVG_BOARD_TEST_ID}\n        height=\"100%\"\n        ref={refSvg}\n        preserveAspectRatio={'xMinYMin meet'}\n        width=\"100%\"\n      />\n    </div>\n  );\n};\n","import React from 'react';\n\nimport styles from './styles.module.css';\n\nexport const DIV_CONTAINER_TEST_ID = 'fallback-ui-div-container-test-id';\n\ninterface Props {\n  error: Error;\n  errorInfo?: React.ErrorInfo;\n  eventId?: string;\n  onReportCrashButtonClick: () => void;\n}\n\nexport const FallbackUI: React.FC<Props> = props => {\n  const { error, errorInfo, eventId, onReportCrashButtonClick } = props;\n\n  return (\n    <div className={styles['fallback-ui']} data-testid={DIV_CONTAINER_TEST_ID}>\n      <h1>Something went wrong.</h1>\n      <details>\n        {error.toString()}\n        <br />\n        {errorInfo && errorInfo.componentStack}\n      </details>\n      {eventId && (\n        <button onClick={onReportCrashButtonClick}>Report feedback</button>\n      )}\n    </div>\n  );\n};\n","import * as Sentry from '@sentry/browser';\nimport React, { ErrorInfo } from 'react';\n\nimport { FallbackUI } from './FallbackUI';\n\ninterface Props {\n  debug?: boolean;\n}\n\ninterface State {\n  error?: Error;\n  errorInfo?: ErrorInfo;\n  eventId?: string;\n}\n\nexport class ErrorBoundary extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = { error: undefined, errorInfo: undefined, eventId: undefined };\n  }\n\n  public componentDidCatch(error: Error, errorInfo: ErrorInfo): void {\n    Sentry.withScope(scope => {\n      scope.setExtras(errorInfo);\n      const eventId = Sentry.captureException(error);\n      this.setState({ error, errorInfo, eventId });\n    });\n  }\n\n  public render(): JSX.Element {\n    const { children, debug } = this.props;\n    const { error, errorInfo, eventId } = this.state;\n\n    if (error && debug) {\n      console.error('--- ERROR ---', error);\n    }\n\n    return error ? (\n      <FallbackUI\n        error={error}\n        errorInfo={errorInfo}\n        eventId={eventId}\n        onReportCrashButtonClick={this.onReportCrash}\n      />\n    ) : (\n      <React.Fragment>{children}</React.Fragment>\n    );\n  }\n\n  private onReportCrash = (): void => {\n    Sentry.showReportDialog({ eventId: this.state.eventId });\n  };\n}\n","import React from 'react';\n\n// import { useSharedState } from '../../hooks';\nimport { Board } from '../Board';\n// import { Board, boardSubject$ } from '../Board';\nimport { ErrorBoundary } from '../ErrorBoundary';\n// import { EventsList } from '../EventsList';\n\n// import styles from './styles.module.css';\n\nexport const Main: React.FC<{}> = () => {\n  //   const [{ coordinates }] = useSharedState(boardSubject$);\n  return (\n    <ErrorBoundary debug={true}>\n      <Board />\n    </ErrorBoundary>\n  );\n  //   return (\n  //     <div className={styles.main}>\n  //       <ErrorBoundary debug={true}>\n  //         <Board />\n  //       </ErrorBoundary>\n  //       <EventsList coordinates={coordinates} />\n  //     </div>\n  //   );\n};\n","import clsx from 'clsx';\nimport React, { useEffect } from 'react';\n\ninterface Props {\n  /**\n   * The sidebar and the non-sidebar element.\n   */\n  children: React.ReactElement[];\n\n  /**\n   * Make the adjacent elements adopt their natural height.\n   */\n  noStretch?: boolean;\n\n  /**\n   * The side where the sidebar is on.\n   */\n  side: 'left' | 'right';\n}\n\nexport const SidebarLayout: React.FC<Props> = props => {\n  const { children, noStretch, side } = props;\n\n  useEffect(() => {\n    if (children.length !== 2) {\n      throw new Error('The Sidebar layout must have exactly 2 children');\n    }\n  }, [children, side]);\n\n  return (\n    <div className={clsx(`with-sidebar-on-the-${side}`)}>\n      <div className={clsx(noStretch && 'not-stretched-wrapper')}>\n        {children}\n      </div>\n    </div>\n  );\n};\n","import * as Sentry from '@sentry/browser';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { App } from './components/App';\n\nimport './css/index.css';\n\n/**\n * We could use the CDN hosted version of the Sentry JavaScript browser SDK, but\n * Ad blockers would probably block Sentry from submitting crash reports.\n * Instead, we add Sentry as a dependency (unfortunately, this means that it\n * will end up in the final bundle).\n */\nSentry.init({\n  dsn: 'https://94f09b0a51c74127b82e3fa4d47857c2@sentry.io/1547393',\n});\n\nReactDOM.render(<App />, document.getElementById('root'));\n","import React from 'react';\n\nimport { Main } from '../Main';\nimport { Sidebar } from '../Sidebar';\nimport { SidebarLayout } from '../SidebarLayout';\n\nexport const App: React.FC<{}> = () => {\n  return (\n    <SidebarLayout side={'right'}>\n      <Main />\n      <Sidebar label={'some label'} />\n    </SidebarLayout>\n  );\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"styles-module__sidebar--179zX\",\"select\":\"styles-module__select--34NKF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"board\":\"styles-module__board--1-URo\",\"svg-board\":\"styles-module__svg-board--qNj_X\"};"],"sourceRoot":""}